[build]
  # Build command
  command = "npm run build"
  
  # Publish directory (where the built files are located)
  publish = "src"
  
  # Environment variables for build
  [build.environment]
    NODE_VERSION = "18"

# Redirect rules
[[redirects]]
  # Redirect /resume to the actual resume file
  from = "/resume"
  to = "/public/documents/zain-ahmad-resume.pdf"
  status = 302

[[redirects]]
  # Handle client-side routing (if needed in the future)
  from = "/*"
  to = "/index.html"
  status = 200
  conditions = {Role = ["admin"]}

# Headers for better performance and security
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"
    
    # Performance headers
    X-DNS-Prefetch-Control = "on"

[[headers]]
  for = "*.html"
  [headers.values]
    # HTML files - cache for a short time
    Cache-Control = "public, max-age=3600, s-maxage=3600"

[[headers]]
  for = "*.css"
  [headers.values]
    # CSS files - cache for a long time with versioning
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "*.js"
  [headers.values]
    # JavaScript files - cache for a long time with versioning
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "/public/images/*"
  [headers.values]
    # Image files - cache for a long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "/public/documents/*"
  [headers.values]
    # Document files - cache for a medium time
    Cache-Control = "public, max-age=86400, s-maxage=86400"

[[headers]]
  for = "/config/*"
  [headers.values]
    # Config files - cache for a short time to allow updates
    Cache-Control = "public, max-age=1800, s-maxage=1800"

[[headers]]
  for = "*.json"
  [headers.values]
    # JSON files - cache for a short time
    Cache-Control = "public, max-age=3600, s-maxage=3600"
    Content-Type = "application/json; charset=utf-8"

[[headers]]
  for = "*.ico"
  [headers.values]
    # Favicon - cache for a very long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "*.png"
  [headers.values]
    # PNG images - cache for a long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "*.jpg"
  [headers.values]
    # JPG images - cache for a long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "*.jpeg"
  [headers.values]
    # JPEG images - cache for a long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "*.svg"
  [headers.values]
    # SVG images - cache for a long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "*.webp"
  [headers.values]
    # WebP images - cache for a long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "*.woff"
  [headers.values]
    # WOFF fonts - cache for a long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

[[headers]]
  for = "*.woff2"
  [headers.values]
    # WOFF2 fonts - cache for a long time
    Cache-Control = "public, max-age=31536000, s-maxage=31536000, immutable"

# Form handling
[[forms]]
  name = "contact"

# Plugin configuration
# Uncomment and install the plugin if you want to use Lighthouse audits
# [[plugins]]
#   package = "netlify-plugin-lighthouse"
#   
#   [plugins.inputs.audits]
#     output_path = "reports/lighthouse.html"
#     
#   [plugins.inputs.settings]
#     # Lighthouse settings for performance optimization
#     preset = "desktop"
#     
#   [plugins.inputs.assert]
#     assertions = '''
#       {
#         "categories:performance": ["error", {"minScore": 0.95}],
#         "categories:accessibility": ["error", {"minScore": 0.95}],
#         "categories:best-practices": ["error", {"minScore": 0.95}],
#         "categories:seo": ["error", {"minScore": 0.95}]
#       }
#     '''

# Edge functions (if needed for advanced functionality)
# [[edge_functions]]
#   function = "hello"
#   path = "/api/hello"

# Development settings
[dev]
  command = "npm run dev"
  port = 3000
  publish = "src"
  autoLaunch = true
